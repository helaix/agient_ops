name: Test Suite

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'cloudflare-workers/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'cloudflare-workers/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./cloudflare-workers
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './cloudflare-workers/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npm run type-check
    
    - name: Lint
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Run load tests
      run: npm run test:load
      env:
        NODE_ENV: test
    
    - name: Run e2e tests
      run: npm run test:e2e
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./cloudflare-workers/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  performance-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    defaults:
      run:
        working-directory: ./cloudflare-workers
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: './cloudflare-workers/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance benchmarks
      run: npm run test:load
      env:
        NODE_ENV: test
        PERFORMANCE_BASELINE: true
    
    - name: Comment performance results
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = './cloudflare-workers/performance-results.json';
          
          if (fs.existsSync(path)) {
            const results = JSON.parse(fs.readFileSync(path, 'utf8'));
            
            const comment = `## Performance Test Results
            
            | Metric | Value | Threshold | Status |
            |--------|-------|-----------|--------|
            | Average Response Time | ${results.averageResponseTime}ms | <500ms | ${results.averageResponseTime < 500 ? '‚úÖ' : '‚ùå'} |
            | Throughput | ${results.throughput} ops/sec | >10 ops/sec | ${results.throughput > 10 ? '‚úÖ' : '‚ùå'} |
            | Error Rate | ${results.errorRate}% | <5% | ${results.errorRate < 5 ? '‚úÖ' : '‚ùå'} |
            | P95 Response Time | ${results.p95ResponseTime}ms | <1000ms | ${results.p95ResponseTime < 1000 ? '‚úÖ' : '‚ùå'} |
            
            ${results.averageResponseTime < 500 && results.throughput > 10 && results.errorRate < 5 ? 'üéâ All performance targets met!' : '‚ö†Ô∏è Some performance targets not met. Please review.'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  security-scan:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./cloudflare-workers
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: './cloudflare-workers/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Run dependency check
      run: npx depcheck
      continue-on-error: true

  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [test]
    
    defaults:
      run:
        working-directory: ./cloudflare-workers
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: './cloudflare-workers/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
      continue-on-error: true
    
    - name: Deploy to Cloudflare Workers (Preview)
      run: npx wrangler deploy --env preview
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      continue-on-error: true

